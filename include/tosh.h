////////////////////////////////////////////////////////////////////////////////////////
//                                                                                    //
// FontAsCode exporter v1.0 - Font data exported as an array of bytes                 //
//                                                                                    //
// more info and bugs-report:  github.com/raysan5/raylib                              //
// feedback and support:       ray[at]raylib.com                                      //
//                                                                                    //
// Copyright (c) 2018-2023 Ramon Santamaria (@raysan5)                                //
//                                                                                    //
// ---------------------------------------------------------------------------------- //
//                                                                                    //
// TODO: Fill the information and license of the exported font here:                  //
//                                                                                    //
// Font name:    ....                                                                 //
// Font creator: ....                                                                 //
// Font LICENSE: ....                                                                 //
//                                                                                    //
////////////////////////////////////////////////////////////////////////////////////////

#define COMPRESSED_DATA_SIZE_FONT_TOSH 2051

// Font image pixels data compressed (DEFLATE)
// NOTE: Original pixel data simplified to GRAYSCALE
static unsigned char fontData_Tosh[COMPRESSED_DATA_SIZE_FONT_TOSH] = { 0xed,
    0xdd, 0x59, 0x72, 0xdb, 0x3a, 0x10, 0x40, 0x51, 0xee, 0x7f, 0xd3, 0xef, 0x55, 0x2a, 0x95, 0x1f, 0x97, 0x2c, 0xa2, 0x1b,
    0xdd, 0x00, 0x87, 0x93, 0xf3, 0x67, 0xcb, 0x1a, 0x48, 0x5e, 0x86, 0xe2, 0x84, 0xff, 0x0e, 0x00, 0x00, 0x00, 0x80, 0x2f,
    0xfe, 0xfc, 0x3b, 0xfb, 0xf9, 0xcc, 0x63, 0x46, 0x7f, 0xff, 0xef, 0x31, 0x23, 0x8f, 0xfb, 0xf9, 0xf8, 0xd9, 0xd7, 0xfe,
    0xf4, 0xfb, 0xe8, 0xfb, 0xa8, 0x7c, 0xec, 0x6f, 0xef, 0xe7, 0xd3, 0xbf, 0xec, 0x7b, 0xf9, 0x36, 0x4f, 0x23, 0xd3, 0x75,
    0xf4, 0x31, 0x67, 0x8f, 0x8d, 0xbc, 0xee, 0xc8, 0xeb, 0x8f, 0x4e, 0xaf, 0xd1, 0x65, 0xe9, 0xdb, 0xbf, 0xee, 0xcf, 0x1d,
    0x59, 0xbe, 0xf4, 0xaf, 0x7f, 0xfd, 0xeb, 0x7f, 0xb6, 0x9f, 0xd5, 0xfd, 0x47, 0x9e, 0xeb, 0xd3, 0x63, 0xce, 0xa6, 0x71,
    0xe7, 0xef, 0x3a, 0xd6, 0x83, 0xd5, 0xeb, 0xf3, 0xec, 0x3a, 0xef, 0x6c, 0xde, 0x47, 0xa7, 0xdf, 0xec, 0xeb, 0x8e, 0xbe,
    0xfe, 0xcc, 0x3a, 0x39, 0x33, 0x1d, 0x56, 0xff, 0x4c, 0xff, 0xfa, 0xd7, 0xbf, 0xfe, 0xef, 0xd0, 0x7f, 0x74, 0xbb, 0xb5,
    0xb2, 0xff, 0x6c, 0xdf, 0x91, 0xbf, 0x1f, 0x69, 0xa1, 0x72, 0xfd, 0xb0, 0xe2, 0x3b, 0xdf, 0xb7, 0xed, 0xeb, 0xc8, 0x7c,
    0xbf, 0x7a, 0xff, 0xd5, 0xeb, 0xcb, 0xab, 0xb6, 0xae, 0x7f, 0xfd, 0xeb, 0x5f, 0xff, 0x55, 0xfd, 0xcf, 0xec, 0x8f, 0x8a,
    0xbc, 0x5e, 0xa4, 0xbf, 0xd5, 0xfd, 0x47, 0xf6, 0x41, 0x3e, 0xa9, 0xff, 0x99, 0xf7, 0x5b, 0x31, 0x9d, 0xa2, 0xff, 0x37,
    0xad, 0xfe, 0xae, 0xa5, 0x7f, 0xfd, 0xeb, 0x5f, 0xff, 0x57, 0xef, 0xbf, 0xf2, 0xf3, 0x57, 0xed, 0x87, 0x89, 0xee, 0x4b,
    0xcb, 0xbe, 0xff, 0x8a, 0x63, 0x76, 0x1d, 0xdb, 0xff, 0x3b, 0xe7, 0xf7, 0xa7, 0x69, 0x5f, 0xd9, 0x7f, 0x75, 0xfb, 0x91,
    0xe3, 0x98, 0xb3, 0x8f, 0xeb, 0xd8, 0x9f, 0xad, 0x7f, 0xfd, 0xeb, 0x5f, 0xff, 0xfa, 0x3f, 0xca, 0xf7, 0xff, 0x74, 0xf7,
    0x1f, 0xf9, 0xbe, 0x12, 0x3d, 0x77, 0xe4, 0x89, 0xfd, 0x57, 0x9d, 0xff, 0x35, 0xb3, 0xdf, 0xb7, 0x72, 0x1b, 0xbc, 0xf2,
    0xf3, 0xec, 0x5c, 0x26, 0xf4, 0xaf, 0x7f, 0xfd, 0xeb, 0xff, 0x4a, 0xfd, 0x67, 0x97, 0x81, 0x5d, 0xe7, 0xec, 0x76, 0xbd,
    0xee, 0xea, 0x79, 0xfd, 0x69, 0x3a, 0xee, 0x38, 0x9f, 0xa9, 0x6b, 0x7b, 0x79, 0x65, 0xff, 0xd1, 0xe3, 0xd9, 0xbb, 0xbe,
    0x13, 0xe8, 0x5f, 0xff, 0xfa, 0x7f, 0x6f, 0xff, 0x15, 0xc7, 0x0e, 0xab, 0xae, 0x85, 0x98, 0x3d, 0xf7, 0x67, 0xe7, 0x35,
    0x3b, 0xfa, 0x3f, 0xda, 0xbf, 0xff, 0xcd, 0x7e, 0x8f, 0xaa, 0x3e, 0xf7, 0xa8, 0xa3, 0x61, 0xfd, 0xeb, 0x5f, 0xff, 0xfa,
    0xbf, 0x7a, 0xff, 0xd5, 0xdb, 0x38, 0x9f, 0x9e, 0xaf, 0xf3, 0xb8, 0x89, 0xfe, 0xc7, 0xf6, 0x57, 0xad, 0xe8, 0xbf, 0xe3,
    0x3a, 0xe6, 0x27, 0xf5, 0x7f, 0x87, 0x7b, 0x87, 0xe8, 0x5f, 0xff, 0xfa, 0xbf, 0x5f, 0xff, 0xdd, 0xfb, 0xff, 0xba, 0x8e,
    0xa7, 0x55, 0x1c, 0x0b, 0xdc, 0x71, 0xbe, 0xce, 0xae, 0xfe, 0xb3, 0xc7, 0xab, 0x66, 0x5a, 0x58, 0x71, 0x1e, 0xec, 0x8e,
    0xe3, 0x7f, 0x55, 0xfd, 0x47, 0xa7, 0xb5, 0xfe, 0xf5, 0xaf, 0x7f, 0xfd, 0x3f, 0xb1, 0xff, 0xcc, 0x71, 0xc5, 0xe8, 0xf9,
    0xc2, 0xfa, 0x8f, 0xef, 0xd7, 0x9d, 0xd9, 0xf7, 0xdb, 0xb5, 0x8f, 0x38, 0xfb, 0x3e, 0xab, 0xee, 0x3d, 0x56, 0xf5, 0xfe,
    0x32, 0xd7, 0x8f, 0xe9, 0x5f, 0xff, 0xfa, 0xd7, 0xff, 0x1d, 0xf7, 0x11, 0x76, 0x9f, 0x3b, 0xd1, 0x79, 0x3e, 0xec, 0xd3,
    0xe6, 0x01, 0xe8, 0x5f, 0xff, 0xb0, 0xfa, 0x3c, 0xa1, 0xcc, 0xb5, 0xc0, 0x57, 0x5b, 0x47, 0xe9, 0x1f, 0xf4, 0xaf, 0x7f,
    0xb0, 0x0c, 0x02, 0xfa, 0x07, 0xf4, 0x0f, 0xe8, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a,
    0xce, 0xb3, 0x9d, 0xb9, 0x5f, 0x53, 0x66, 0x4c, 0xef, 0xc8, 0xf8, 0x1f, 0x5d, 0x8f, 0x9b, 0xf9, 0x9b, 0x99, 0xcf, 0x15,
    0x19, 0xb7, 0x22, 0x33, 0xc6, 0x45, 0xf4, 0x79, 0xcf, 0xae, 0xb1, 0x9e, 0x9d, 0x5e, 0x67, 0xd7, 0x72, 0x47, 0xdf, 0x67,
    0x74, 0x59, 0x1f, 0x79, 0x0f, 0x23, 0xd7, 0x98, 0xcf, 0xcc, 0xdb, 0x8a, 0x65, 0x57, 0xff, 0xfa, 0xd7, 0xbf, 0xfe, 0xab,
    0xfb, 0xaf, 0x78, 0xdd, 0xea, 0xf9, 0x73, 0x24, 0xef, 0x87, 0x5c, 0x3d, 0xbe, 0xc4, 0xcc, 0x63, 0x2b, 0xee, 0x85, 0x7d,
    0x95, 0xc7, 0x1e, 0x1b, 0xc7, 0xed, 0x9c, 0xb9, 0x47, 0x4c, 0xd5, 0xb8, 0x31, 0xab, 0xe6, 0xed, 0x8e, 0xfb, 0xcb, 0xea,
    0x5f, 0xff, 0xfa, 0x7f, 0x66, 0xff, 0x2b, 0xaf, 0xc3, 0xcd, 0x8e, 0x93, 0x30, 0xbb, 0xcc, 0xfe, 0xfc, 0x5d, 0xd7, 0x78,
    0x0c, 0xab, 0x3e, 0x47, 0xe5, 0x77, 0xb8, 0x3b, 0xf4, 0x5f, 0x35, 0x66, 0xe8, 0xcf, 0xf9, 0x7f, 0xb6, 0x3c, 0x8c, 0x8e,
    0x6f, 0xd2, 0x35, 0x5d, 0x2b, 0xc7, 0xc8, 0xd7, 0xbf, 0xfe, 0xf5, 0xaf, 0xff, 0xdd, 0xf7, 0xe0, 0xc8, 0x3c, 0xe7, 0xc8,
    0xf8, 0x5f, 0xa3, 0xfb, 0x5e, 0x56, 0xf4, 0xdf, 0xb5, 0x4d, 0xdf, 0xd5, 0x7f, 0xc5, 0xfb, 0xed, 0xea, 0xbf, 0xf2, 0xfb,
    0x69, 0xa6, 0xff, 0x23, 0x31, 0xbe, 0x9c, 0xfe, 0xf5, 0xaf, 0x7f, 0xfd, 0xdf, 0xb9, 0xff, 0xcc, 0x98, 0x45, 0x95, 0xe3,
    0x21, 0x8d, 0x4e, 0x83, 0xcc, 0x7e, 0x97, 0x68, 0xff, 0x55, 0xf3, 0x61, 0xd5, 0xfe, 0xa4, 0x1d, 0xef, 0xb7, 0xa3, 0xff,
    0xea, 0xf5, 0x5a, 0x64, 0xcc, 0x58, 0xfd, 0xeb, 0x5f, 0xff, 0xfa, 0x7f, 0x63, 0xff, 0x57, 0x5a, 0xbf, 0x44, 0x5b, 0xae,
    0xea, 0x29, 0xf2, 0x7d, 0xa2, 0xab, 0xff, 0xca, 0xf3, 0x79, 0x32, 0xdf, 0x99, 0x32, 0xe7, 0x15, 0x55, 0xf5, 0x1f, 0x59,
    0x07, 0x74, 0xf7, 0x7f, 0xb6, 0x4e, 0xca, 0xf4, 0x1f, 0x9d, 0x5f, 0xfa, 0xd7, 0xbf, 0xfe, 0xf5, 0xbf, 0xea, 0x98, 0x5c,
    0xe7, 0x3a, 0xa0, 0x62, 0x9e, 0x76, 0xf7, 0xff, 0xa6, 0xed, 0xff, 0xb7, 0x1d, 0xff, 0x9b, 0xd9, 0x0f, 0xd9, 0xb5, 0xfd,
    0xaf, 0x7f, 0xfd, 0xeb, 0x5f, 0xff, 0x57, 0xe9, 0x7f, 0xf7, 0xf1, 0xbf, 0x8e, 0xfe, 0x67, 0xb6, 0x63, 0x9d, 0xff, 0x33,
    0xb7, 0xbc, 0x74, 0x9e, 0xf3, 0xfa, 0xf4, 0xfe, 0x3b, 0xcf, 0x01, 0xd6, 0xbf, 0xfe, 0xf5, 0xff, 0xce, 0xfe, 0x57, 0x5d,
    0xfb, 0xd3, 0xf9, 0x5c, 0x77, 0x3a, 0x3f, 0x53, 0xff, 0xeb, 0x5e, 0xb7, 0x63, 0x7e, 0x45, 0xaf, 0x6f, 0xaf, 0xdc, 0xfe,
    0x8f, 0x9e, 0x13, 0xa5, 0x7f, 0xfd, 0xeb, 0x5f, 0xff, 0x3b, 0xce, 0x1b, 0xed, 0xdc, 0x37, 0x94, 0x39, 0x96, 0xb5, 0xb2,
    0xd3, 0x8a, 0xfd, 0x74, 0xab, 0xd7, 0x15, 0x3b, 0xfa, 0xaf, 0xfa, 0xec, 0x57, 0x5d, 0x5f, 0x57, 0x7d, 0xaf, 0x1e, 0xb9,
    0xff, 0x8a, 0xfe, 0xf5, 0xaf, 0x7f, 0xfd, 0x5f, 0xf5, 0x9c, 0xa0, 0xaa, 0x6b, 0x7e, 0x66, 0xef, 0x29, 0x36, 0xba, 0x2d,
    0xd7, 0x71, 0x7f, 0xa6, 0x55, 0xf7, 0xff, 0xaa, 0xba, 0xc7, 0x5a, 0xc7, 0xfd, 0xbf, 0xa2, 0xd3, 0x33, 0x7a, 0xff, 0xaf,
    0xe8, 0x7d, 0xc5, 0x46, 0x3f, 0x53, 0xe6, 0xbc, 0xb1, 0xca, 0x7b, 0x79, 0x75, 0xde, 0xff, 0x4b, 0xff, 0xfa, 0xd7, 0xbf,
    0xfe, 0xef, 0xc8, 0xf4, 0xc0, 0x32, 0x6f, 0x5a, 0x80, 0x65, 0xfe, 0xbd, 0xd3, 0xc3, 0xf6, 0x11, 0xd6, 0x01, 0xfa, 0x37,
    0x5d, 0xd0, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0xa4, 0x6b, 0x67,
    0x2b, 0xee, 0x61, 0x95, 0xbd, 0x77, 0xd5, 0xcf, 0x9f, 0xfd, 0xf6, 0xd8, 0xb3, 0x9f, 0x5d, 0xed, 0xb1, 0xb3, 0xf7, 0xef,
    0xca, 0xde, 0xd3, 0x6b, 0xe6, 0xfa, 0xd1, 0xb3, 0x7f, 0x91, 0xe7, 0x8b, 0x2e, 0x5b, 0x33, 0xcb, 0xee, 0xe8, 0xdf, 0x54,
    0x5d, 0x4b, 0x1e, 0xbd, 0xdf, 0x59, 0x64, 0xb9, 0x9a, 0xfd, 0x2c, 0xfa, 0xd7, 0xbf, 0xfe, 0xf5, 0x9f, 0xb9, 0x97, 0x40,
    0xd5, 0xcf, 0xa2, 0x63, 0x2c, 0x47, 0x7f, 0x76, 0x34, 0x8e, 0xf3, 0x30, 0xf3, 0xf7, 0x15, 0x9f, 0x6b, 0xe6, 0x5e, 0x0f,
    0x99, 0x71, 0xd3, 0x3b, 0xee, 0x47, 0xd1, 0x35, 0x7e, 0xe8, 0xec, 0x7a, 0x72, 0xc5, 0x7b, 0x1d, 0xfd, 0x7f, 0x62, 0xf7,
    0x3d, 0x3d, 0xf4, 0xaf, 0x7f, 0xfd, 0xeb, 0xbf, 0x63, 0xfa, 0x3e, 0xad, 0xff, 0x63, 0x62, 0x2c, 0xc6, 0x99, 0xb1, 0x3b,
    0x76, 0x8d, 0xab, 0x5d, 0xb5, 0xce, 0x59, 0xd1, 0xff, 0xd5, 0xd6, 0x55, 0xdd, 0x63, 0xa7, 0xeb, 0x5f, 0xff, 0xfa, 0xd7,
    0xff, 0xd5, 0xfa, 0xaf, 0x58, 0xb6, 0x2b, 0xb7, 0xd3, 0x47, 0xc7, 0x4d, 0x1c, 0xdd, 0x2e, 0xbe, 0x6b, 0xff, 0x15, 0x63,
    0x87, 0x65, 0x3f, 0x5f, 0x74, 0xdc, 0xf5, 0x91, 0xfd, 0x6a, 0x99, 0xfd, 0x84, 0xd1, 0xf7, 0xb9, 0xa3, 0xff, 0xae, 0x31,
    0x44, 0xf4, 0xaf, 0x7f, 0xfd, 0xeb, 0x5f, 0xff, 0xf3, 0xfb, 0xc5, 0xa2, 0xfb, 0xd0, 0x56, 0x6f, 0xf3, 0x5e, 0xe5, 0xfe,
    0xd0, 0xd9, 0x63, 0x85, 0x5d, 0xfb, 0xfa, 0x2a, 0xd6, 0x29, 0x33, 0xc7, 0x44, 0x2b, 0x3e, 0x7b, 0xf5, 0x7c, 0xd6, 0xbf,
    0xfe, 0xf5, 0xff, 0xee, 0xfe, 0xb3, 0xe7, 0xff, 0x3c, 0xa9, 0xff, 0xcc, 0x72, 0x55, 0x31, 0x0d, 0xf4, 0xbf, 0xe6, 0x58,
    0x74, 0xf5, 0xf7, 0xa0, 0x15, 0xc7, 0xff, 0xf4, 0xaf, 0x7f, 0xfd, 0xeb, 0x7f, 0xe5, 0xf6, 0x7f, 0xe5, 0x72, 0x56, 0xdd,
    0x7f, 0x66, 0x3f, 0x5d, 0xf6, 0xf1, 0x2b, 0x8e, 0x77, 0x75, 0x75, 0x7d, 0xd5, 0xfe, 0xab, 0x1a, 0x58, 0xd5, 0xff, 0xec,
    0xf7, 0xb6, 0xd1, 0x7d, 0x8f, 0xfa, 0xd7, 0xbf, 0xfe, 0xf5, 0xaf, 0xff, 0x67, 0xf5, 0x5f, 0x7d, 0x6c, 0xef, 0x6e, 0xfd,
    0x47, 0xae, 0x81, 0xc9, 0xf4, 0x9a, 0x39, 0x4e, 0x58, 0xf5, 0xfd, 0xb6, 0xeb, 0xbc, 0x6c, 0xfd, 0xeb, 0x5f, 0xff, 0xfa,
    0xbf, 0xda, 0xf1, 0xbf, 0x27, 0xf7, 0x9f, 0x59, 0x07, 0xea, 0x7f, 0xff, 0xfe, 0xc2, 0xd5, 0xcf, 0xb7, 0xfa, 0xfc, 0x5f,
    0xfd, 0xeb, 0x5f, 0xff, 0xfa, 0xbf, 0xea, 0xf9, 0x3f, 0x1d, 0xfd, 0x57, 0x76, 0x35, 0xb2, 0xcd, 0xd9, 0xf5, 0x1e, 0xba,
    0xce, 0xab, 0xea, 0x38, 0x5f, 0xf8, 0x6a, 0xdf, 0x15, 0xba, 0xfa, 0xaf, 0x3a, 0x67, 0x36, 0xb3, 0xff, 0xaf, 0x7a, 0x7d,
    0xa1, 0x7f, 0xfd, 0xeb, 0x5f, 0xff, 0x95, 0xfb, 0x66, 0xa2, 0xf7, 0xb3, 0x9a, 0xb9, 0x37, 0xd2, 0xcc, 0xf5, 0x0c, 0x95,
    0xeb, 0x95, 0xc8, 0x3d, 0xbd, 0x22, 0xef, 0xb7, 0xe2, 0xde, 0x59, 0x6f, 0xea, 0xff, 0xd3, 0xfa, 0xba, 0xfa, 0xfc, 0xb6,
    0x8a, 0x75, 0x40, 0xe6, 0xbe, 0x63, 0xd9, 0xf5, 0xde, 0xcc, 0x7d, 0xe5, 0xf4, 0xaf, 0x7f, 0xfd, 0xeb, 0x9f, 0xfb, 0xed,
    0xf3, 0x5a, 0x79, 0x4e, 0x11, 0xa0, 0x7f, 0x60, 0xef, 0xf9, 0x31, 0xb3, 0xf7, 0xbf, 0xb4, 0x3d, 0x08, 0xfa, 0xd7, 0x3f,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xb3, 0xae, 0x45, 0x1d, 0xfd, 0xf9,
    0xc8, 0x35, 0xad, 0x67, 0xd7, 0xb0, 0x8e, 0x8e, 0x0b, 0x11, 0xb9, 0x37, 0xd4, 0xe8, 0xd8, 0x10, 0xd9, 0xe7, 0x1c, 0x9d,
    0x56, 0xa3, 0xef, 0x21, 0x32, 0xbd, 0x22, 0xf3, 0x2e, 0x32, 0x3f, 0x2b, 0x1f, 0x3b, 0xf2, 0xf9, 0xbb, 0xef, 0x79, 0x15,
    0x1d, 0x97, 0x3b, 0x7a, 0x4f, 0x59, 0xfd, 0xeb, 0x5f, 0xff, 0xfa, 0x7f, 0xd3, 0xb6, 0x41, 0xe5, 0xdf, 0xfc, 0x36, 0x2e,
    0x62, 0xf4, 0x3e, 0x9d, 0xa3, 0xf3, 0xb7, 0xf2, 0x39, 0x47, 0xd7, 0x15, 0x55, 0xef, 0xf3, 0x28, 0x1e, 0x4b, 0xa5, 0x6a,
    0xfc, 0xad, 0x91, 0x9f, 0xcf, 0xfe, 0x7d, 0xf5, 0xb4, 0xaa, 0xf8, 0x5d, 0x64, 0x4c, 0x79, 0xfd, 0xeb, 0x5f, 0xff, 0xfa,
    0xd7, 0xff, 0xdc, 0xf4, 0xdc, 0x39, 0xe6, 0xf3, 0xaa, 0x56, 0x47, 0xbf, 0x23, 0x74, 0xb5, 0x73, 0xf6, 0xd8, 0xd1, 0xe5,
    0x3e, 0x3b, 0xde, 0xf5, 0xd1, 0x38, 0xf6, 0x8a, 0xfe, 0xf5, 0xaf, 0x7f, 0xfd, 0xeb, 0x3f, 0xb7, 0xcf, 0xee, 0xd3, 0x18,
    0x21, 0x55, 0xf3, 0xe1, 0x8d, 0xfd, 0x47, 0xf7, 0x27, 0x55, 0x8f, 0xa5, 0x9a, 0xd9, 0x4e, 0x8f, 0x2c, 0xf7, 0xbb, 0xc7,
    0x7e, 0xab, 0xfe, 0xdd, 0xd3, 0xf7, 0x05, 0xea, 0x5f, 0xff, 0xfa, 0x7f, 0x6f, 0xff, 0x55, 0xcb, 0x8b, 0xfe, 0x73, 0x63,
    0x7a, 0xad, 0x1e, 0x4b, 0xfd, 0x8e, 0xfd, 0x57, 0xac, 0x2b, 0x2b, 0xe7, 0xdb, 0x9b, 0xbe, 0xe7, 0xeb, 0x5f, 0xff, 0xfa,
    0xd7, 0x7f, 0xc7, 0x7c, 0xd8, 0xd9, 0x7f, 0xd7, 0xf1, 0xbf, 0xea, 0x7d, 0xac, 0xd5, 0xfd, 0x8f, 0xee, 0xa7, 0xfb, 0xed,
    0x5c, 0xad, 0xc8, 0xe3, 0x2b, 0x1e, 0x1b, 0xdd, 0x36, 0x5f, 0xb5, 0x8f, 0x5b, 0xff, 0xfa, 0xd7, 0xbf, 0xfe, 0xdf, 0xd2,
    0x7f, 0xd5, 0x7c, 0xb8, 0xd2, 0xf6, 0x7f, 0xf6, 0xfc, 0xdf, 0x1d, 0xad, 0x46, 0xb7, 0xa7, 0xab, 0xfa, 0x1f, 0x1d, 0x3f,
    0x3b, 0xbb, 0x4d, 0x1f, 0xfd, 0xec, 0xd9, 0xf3, 0x78, 0xb3, 0xe7, 0x0d, 0xeb, 0x5f, 0xff, 0xfa, 0xd7, 0xff, 0x9b, 0xfb,
    0x8f, 0xae, 0x03, 0xa2, 0xe7, 0xff, 0x8e, 0x5e, 0x57, 0x32, 0x7a, 0xbd, 0x50, 0xd7, 0x76, 0xfa, 0xc8, 0x74, 0x1a, 0x5d,
    0xce, 0x2a, 0x8e, 0xa5, 0x66, 0xd7, 0x53, 0xd5, 0xfb, 0xe9, 0x22, 0xd7, 0xff, 0x64, 0x9a, 0xac, 0x98, 0xaf, 0xf6, 0xff,
    0xe9, 0x5f, 0xff, 0xfa, 0xd7, 0xff, 0xde, 0xe3, 0x7f, 0x77, 0x3d, 0xa7, 0x79, 0xd7, 0x67, 0x7b, 0xfa, 0x75, 0xe7, 0xab,
    0x9e, 0x4f, 0xff, 0xfa, 0xd7, 0xbf, 0xfe, 0xf5, 0x7f, 0xb4, 0x5c, 0x97, 0x79, 0x97, 0xe9, 0x39, 0xba, 0x6d, 0x5a, 0xfd,
    0xb7, 0xbb, 0xde, 0xf3, 0x9d, 0xee, 0x37, 0xa3, 0x7f, 0xfd, 0xeb, 0x5f, 0xff, 0xfa, 0x5f, 0xdf, 0xfa, 0x8e, 0x7b, 0x35,
    0x81, 0xfe, 0xf5, 0x0f, 0xfa, 0xdf, 0x37, 0x9d, 0x74, 0xca, 0x9b, 0xf7, 0x27, 0xea, 0x5f, 0xff, 0xe8, 0xff, 0x6d, 0xd3,
    0xca, 0x36, 0x3a, 0x4f, 0x5d, 0xae, 0xdf, 0x7c, 0x2f, 0x0f, 0xfd, 0xa3, 0x7f, 0xfd, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0xcf, 0xdf,
    0x7f, 0xa6, 0x03, 0xe8, 0x1f, 0x78, 0x5d, 0xff, 0xff, 0x03 };

// Font characters rectangles data
static const Rectangle fontRecs_Tosh[95] = {
    { 4, 4, 16 , 32 },
    { 28, 4, 6 , 22 },
    { 42, 4, 8 , 8 },
    { 58, 4, 12 , 22 },
    { 78, 4, 12 , 30 },
    { 98, 4, 14 , 26 },
    { 120, 4, 14 , 22 },
    { 142, 4, 4 , 8 },
    { 154, 4, 8 , 26 },
    { 170, 4, 8 , 26 },
    { 186, 4, 14 , 14 },
    { 208, 4, 14 , 22 },
    { 230, 4, 4 , 8 },
    { 242, 4, 12 , 2 },
    { 262, 4, 2 , 4 },
    { 272, 4, 12 , 26 },
    { 292, 4, 12 , 22 },
    { 312, 4, 12 , 22 },
    { 332, 4, 12 , 22 },
    { 352, 4, 12 , 22 },
    { 372, 4, 14 , 22 },
    { 394, 4, 12 , 22 },
    { 414, 4, 12 , 22 },
    { 434, 4, 14 , 22 },
    { 456, 4, 12 , 22 },
    { 476, 4, 12 , 22 },
    { 496, 4, 2 , 16 },
    { 4, 44, 4 , 20 },
    { 16, 44, 12 , 22 },
    { 36, 44, 12 , 10 },
    { 56, 44, 12 , 22 },
    { 76, 44, 14 , 22 },
    { 98, 44, 14 , 26 },
    { 120, 44, 14 , 22 },
    { 142, 44, 14 , 22 },
    { 164, 44, 14 , 22 },
    { 186, 44, 14 , 22 },
    { 208, 44, 14 , 22 },
    { 230, 44, 14 , 22 },
    { 252, 44, 14 , 22 },
    { 274, 44, 14 , 22 },
    { 296, 44, 10 , 22 },
    { 314, 44, 14 , 22 },
    { 336, 44, 14 , 22 },
    { 358, 44, 14 , 22 },
    { 380, 44, 14 , 22 },
    { 402, 44, 14 , 22 },
    { 424, 44, 14 , 22 },
    { 446, 44, 14 , 22 },
    { 468, 44, 14 , 26 },
    { 4, 84, 14 , 22 },
    { 26, 84, 12 , 22 },
    { 46, 84, 14 , 22 },
    { 68, 84, 14 , 22 },
    { 90, 84, 14 , 22 },
    { 112, 84, 14 , 22 },
    { 134, 84, 14 , 22 },
    { 156, 84, 14 , 22 },
    { 178, 84, 12 , 22 },
    { 198, 84, 8 , 26 },
    { 214, 84, 12 , 26 },
    { 234, 84, 8 , 26 },
    { 250, 84, 14 , 8 },
    { 272, 84, 16 , 2 },
    { 296, 84, 4 , 8 },
    { 308, 84, 14 , 16 },
    { 330, 84, 14 , 22 },
    { 352, 84, 12 , 16 },
    { 372, 84, 14 , 22 },
    { 394, 84, 12 , 16 },
    { 414, 84, 12 , 22 },
    { 434, 84, 14 , 20 },
    { 456, 84, 14 , 22 },
    { 478, 84, 12 , 22 },
    { 4, 124, 12 , 26 },
    { 24, 124, 14 , 22 },
    { 46, 124, 12 , 22 },
    { 66, 124, 14 , 16 },
    { 88, 124, 14 , 16 },
    { 110, 124, 12 , 16 },
    { 130, 124, 14 , 20 },
    { 152, 124, 14 , 20 },
    { 174, 124, 12 , 16 },
    { 194, 124, 12 , 16 },
    { 214, 124, 12 , 20 },
    { 234, 124, 14 , 16 },
    { 256, 124, 14 , 16 },
    { 278, 124, 14 , 16 },
    { 300, 124, 14 , 16 },
    { 322, 124, 14 , 20 },
    { 344, 124, 12 , 16 },
    { 364, 124, 10 , 26 },
    { 382, 124, 2 , 22 },
    { 392, 124, 10 , 26 },
    { 410, 124, 14 , 8 },
};

// Font glyphs info data
// NOTE: No glyphs.image data provided
static const GlyphInfo fontGlyphs_Tosh[95] = {
    { 32, 0, 26, 16, { 0 }},
    { 33, 4, 4, 16, { 0 }},
    { 34, 4, 4, 16, { 0 }},
    { 35, 2, 4, 16, { 0 }},
    { 36, 2, 0, 16, { 0 }},
    { 37, 0, 2, 16, { 0 }},
    { 38, 0, 4, 16, { 0 }},
    { 39, 6, 4, 16, { 0 }},
    { 40, 4, 2, 16, { 0 }},
    { 41, 2, 2, 16, { 0 }},
    { 42, 0, 8, 16, { 0 }},
    { 43, 0, 4, 16, { 0 }},
    { 44, 4, 22, 16, { 0 }},
    { 45, 2, 14, 16, { 0 }},
    { 46, 6, 22, 16, { 0 }},
    { 47, 2, 2, 16, { 0 }},
    { 48, 2, 4, 16, { 0 }},
    { 49, 2, 4, 16, { 0 }},
    { 50, 2, 4, 16, { 0 }},
    { 51, 2, 4, 16, { 0 }},
    { 52, 0, 4, 16, { 0 }},
    { 53, 2, 4, 16, { 0 }},
    { 54, 2, 4, 16, { 0 }},
    { 55, 0, 4, 16, { 0 }},
    { 56, 2, 4, 16, { 0 }},
    { 57, 2, 4, 16, { 0 }},
    { 58, 6, 10, 16, { 0 }},
    { 59, 4, 10, 16, { 0 }},
    { 60, 2, 4, 16, { 0 }},
    { 61, 2, 10, 16, { 0 }},
    { 62, 2, 4, 16, { 0 }},
    { 63, 0, 4, 16, { 0 }},
    { 64, 0, 2, 16, { 0 }},
    { 65, 0, 4, 16, { 0 }},
    { 66, 0, 4, 16, { 0 }},
    { 67, 0, 4, 16, { 0 }},
    { 68, 0, 4, 16, { 0 }},
    { 69, 0, 4, 16, { 0 }},
    { 70, 0, 4, 16, { 0 }},
    { 71, 0, 4, 16, { 0 }},
    { 72, 0, 4, 16, { 0 }},
    { 73, 2, 4, 16, { 0 }},
    { 74, 0, 4, 16, { 0 }},
    { 75, 0, 4, 16, { 0 }},
    { 76, 0, 4, 16, { 0 }},
    { 77, 0, 4, 16, { 0 }},
    { 78, 0, 4, 16, { 0 }},
    { 79, 0, 4, 16, { 0 }},
    { 80, 0, 4, 16, { 0 }},
    { 81, 0, 4, 16, { 0 }},
    { 82, 0, 4, 16, { 0 }},
    { 83, 2, 4, 16, { 0 }},
    { 84, 0, 4, 16, { 0 }},
    { 85, 0, 4, 16, { 0 }},
    { 86, 0, 4, 16, { 0 }},
    { 87, 0, 4, 16, { 0 }},
    { 88, 0, 4, 16, { 0 }},
    { 89, 0, 4, 16, { 0 }},
    { 90, 2, 4, 16, { 0 }},
    { 91, 4, 2, 16, { 0 }},
    { 92, 2, 2, 16, { 0 }},
    { 93, 2, 2, 16, { 0 }},
    { 94, 0, 2, 16, { 0 }},
    { 95, 0, 28, 16, { 0 }},
    { 96, 4, 2, 16, { 0 }},
    { 97, 0, 10, 16, { 0 }},
    { 98, 0, 4, 16, { 0 }},
    { 99, 2, 10, 16, { 0 }},
    { 100, 0, 4, 16, { 0 }},
    { 101, 2, 10, 16, { 0 }},
    { 102, 2, 4, 16, { 0 }},
    { 103, 0, 10, 16, { 0 }},
    { 104, 0, 4, 16, { 0 }},
    { 105, 2, 4, 16, { 0 }},
    { 106, 0, 4, 16, { 0 }},
    { 107, 0, 4, 16, { 0 }},
    { 108, 2, 4, 16, { 0 }},
    { 109, 0, 10, 16, { 0 }},
    { 110, 0, 10, 16, { 0 }},
    { 111, 2, 10, 16, { 0 }},
    { 112, 0, 10, 16, { 0 }},
    { 113, 0, 10, 16, { 0 }},
    { 114, 2, 10, 16, { 0 }},
    { 115, 2, 10, 16, { 0 }},
    { 116, 0, 6, 16, { 0 }},
    { 117, 0, 10, 16, { 0 }},
    { 118, 0, 10, 16, { 0 }},
    { 119, 0, 10, 16, { 0 }},
    { 120, 0, 10, 16, { 0 }},
    { 121, 0, 10, 16, { 0 }},
    { 122, 2, 10, 16, { 0 }},
    { 123, 2, 2, 16, { 0 }},
    { 124, 6, 4, 16, { 0 }},
    { 125, 2, 2, 16, { 0 }},
    { 126, 0, 2, 16, { 0 }},
};

// Font loading function: Tosh
static Font LoadFont_Tosh(void)
{
    Font font = { 0 };

    font.baseSize = 32;
    font.glyphCount = 95;
    font.glyphPadding = 4;

    // Custom font loading
    // NOTE: Compressed font image data (DEFLATE), it requires DecompressData() function
    int fontDataSize_Tosh = 0;
    unsigned char *data = DecompressData(fontData_Tosh, COMPRESSED_DATA_SIZE_FONT_TOSH, &fontDataSize_Tosh);
    Image imFont = { data, 512, 256, 1, 2 };

    // Load texture from image
    font.texture = LoadTextureFromImage(imFont);
    UnloadImage(imFont);  // Uncompressed data can be unloaded from memory

    // Assign glyph recs and info data directly
    // WARNING: This font data must not be unloaded
    font.recs = (Rectangle*)&fontRecs_Tosh;
    font.glyphs = (GlyphInfo*)&fontGlyphs_Tosh;

    return font;
}
